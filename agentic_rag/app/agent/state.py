from typing import Annotated, Any, List, Optional, TypedDict

from langgraph.graph.message import add_messages


class AgentState(TypedDict):
    """
    Represents the state of our agent at any given time.

    Attributes:
        user_query: The initial question or request from the user.
        clarifying_questions: A list of questions generated by the requirements agent
                              to get more detail from the user.
        structured_requirements: A dictionary containing the detailed and structured
                                 requirements after analysis.
        final_workflow: The final n8n workflow JSON generated by the workflow agent.
        messages: The history of messages in the conversation. This is managed by LangGraph.
    """

    user_query: str
    clarifying_questions: Optional[List[str]]
    structured_requirements: Optional[dict[str, Any]]
    final_workflow: Optional[dict[str, Any]]
    messages: Annotated[List[Any], add_messages]
